// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package cz.vutbr.fit.danielpindur.oslc.r4j.resources;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;

import cz.vutbr.fit.danielpindur.oslc.r4j.resources.Jira_r4jDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.DctermsDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.Jira_r4jDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.Oslc_rmDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IFolder;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IRequirement;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IRequirementCollection;
// Start of user code imports
// End of user code

@OslcNamespace(Jira_r4jDomainConstants.FOLDER_NAMESPACE)
@OslcName(Jira_r4jDomainConstants.FOLDER_LOCALNAME)
@OslcResourceShape(title = "Folder Shape", describes = Jira_r4jDomainConstants.FOLDER_TYPE)
public interface IFolder
{

    public void addSubfolder(final Link subfolder );
    public void addContains(final Link contains );

    @OslcName("title")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "title")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.XMLLiteral)
    @OslcReadOnly(false)
    public String getTitle();

    @OslcName("description")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "description")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.XMLLiteral)
    @OslcReadOnly(false)
    public String getDescription();

    @OslcName("identifier")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "identifier")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.String)
    @OslcReadOnly(true)
    public String getIdentifier();

    @OslcName("subfolder")
    @OslcPropertyDefinition(Jira_r4jDomainConstants.JIRA_R4J_NAMSPACE + "subfolder")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Jira_r4jDomainConstants.FOLDER_TYPE})
    @OslcReadOnly(true)
    public Set<Link> getSubfolder();

    @OslcName("parent")
    @OslcPropertyDefinition(Jira_r4jDomainConstants.JIRA_R4J_NAMSPACE + "parent")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Jira_r4jDomainConstants.FOLDER_TYPE})
    @OslcReadOnly(false)
    public Link getParent();

    @OslcName("path")
    @OslcPropertyDefinition(Jira_r4jDomainConstants.JIRA_R4J_NAMSPACE + "path")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.String)
    @OslcReadOnly(true)
    public String getPath();

    @OslcName("contains")
    @OslcPropertyDefinition(Jira_r4jDomainConstants.JIRA_R4J_NAMSPACE + "contains")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Oslc_rmDomainConstants.REQUIREMENTCOLLECTION_TYPE, Oslc_rmDomainConstants.REQUIREMENT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getContains();


    public void setTitle(final String title );
    public void setDescription(final String description );
    public void setIdentifier(final String identifier );
    public void setSubfolder(final Set<Link> subfolder );
    public void setParent(final Link parent );
    public void setPath(final String path );
    public void setContains(final Set<Link> contains );
}

