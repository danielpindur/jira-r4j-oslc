{
	"info": {
		"_postman_id": "2730e432-1b45-49ba-907b-f7903394419a",
		"name": "test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26308466"
	},
	"item": [
		{
			"name": "jira",
			"item": [
				{
					"name": "requirement",
					"item": [
						{
							"name": "create-requirement-without-id",
							"item": [
								{
									"name": "Create Requirement without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "create-requirement-with-id",
							"item": [
								{
									"name": "Create Requirement with Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-requirement",
							"item": [
								{
									"name": "Create Requirement with Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('updated-requirement', requirement);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Requirement",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var requirement = requestJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('request-requirement', requirement);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Updated Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description 2</dcterms:description>\n\t\t<dcterms:subject>test_label3</dcterms:subject>\n\t\t<dcterms:subject>test_label4</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"var request_requirement = pm.variables.get('request-requirement');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_requirement['dcterms:title']).to.eql(request_requirement['dcterms:title']);",
													"    pm.expect(updated_requirement['dcterms:description']).to.eql(request_requirement['dcterms:description']);",
													"    pm.expect(updated_requirement['dcterms:subject']).to.eql(request_requirement['dcterms:subject']);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-requirement-with-links",
							"item": [
								{
									"name": "Create Requirement 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-2', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-2', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement with Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t\t<oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('updated-requirement', requirement);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Requirement",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var requirement = requestJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('request-requirement', requirement);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Updated Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description 2</dcterms:description>\n\t\t<dcterms:subject>test_label3</dcterms:subject>\n\t\t<dcterms:subject>test_label4</dcterms:subject>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-2}}\"/>\n\t\t<oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-2}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"var request_requirement = pm.variables.get('request-requirement');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_requirement['dcterms:title']).to.eql(request_requirement['dcterms:title']);",
													"    pm.expect(updated_requirement['dcterms:description']).to.eql(request_requirement['dcterms:description']);",
													"    pm.expect(updated_requirement['dcterms:subject']).to.eql(request_requirement['dcterms:subject']);",
													"    pm.expect(updated_requirement['oslc_rm:decomposes']['$']['rdf:resource']).to.eql(evalVariableValuesInString(request_requirement['oslc_rm:decomposes']['$']['rdf:resource']));",
													"    pm.expect(updated_requirement['oslc_rm:decomposedBy']['$']['rdf:resource']).to.eql(evalVariableValuesInString(request_requirement['oslc_rm:decomposedBy']['$']['rdf:resource']));",
													"});",
													"",
													"function evalVariableValuesInString(text) {",
													"    var variable_id = text.match(/{{(.*?)}}/)[1];",
													"    var variable_value = pm.variables.get(variable_id);",
													"    return text.replace(\"{{\" + variable_id + \"}}\", variable_value);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get-non-existing-requirement",
							"item": [
								{
									"name": "Get Non-existing Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirement/Requirement/non-existing-guid",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirement",
												"Requirement",
												"non-existing-guid"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "requirement-with-invalid-links-not-created",
							"item": [
								{
									"name": "Create Requirement with Invalid Requirement Decomposed By",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{$guid}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement with Invalid Requirement Decomposes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{$guid}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement with Invalid Requirement Collection Decomposed By",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{$guid}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement with Invalid Requirement Collection Decomposes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b38</dcterms:identifier>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{$guid}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "query-requirement",
							"item": [
								{
									"name": "fulltext",
									"item": [
										{
											"name": "single-title",
											"item": [
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirement"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple-title",
											"item": [
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirement"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "single-description",
											"item": [
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test {{random-string}} description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirement"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple-description",
											"item": [
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test {{random-string}} description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test {{random-string}} description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirement"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "where",
									"item": [
										{
											"name": "oslc:shortTitle",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=\"{{created-query}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'oslc:shortTitle');",
															"pm.variables.set('prefixes', 'oslc=<http://open-services.net/ns/core%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:subject",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=\"{{created-query}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:subject');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:modified",
											"item": [
												{
													"name": "greater",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"var created = Date.parse(requirement[query_target]['_']);",
																			"var less = new Date(created - 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "less",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"var created = Date.parse(requirement[query_target]['_']);",
																			"var less = new Date(created + 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:modified');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:creator",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:creator');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:created",
											"item": [
												{
													"name": "greater",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"var created = Date.parse(requirement[query_target]['_']);",
																			"var less = new Date(created - 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "less",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"var created = Date.parse(requirement[query_target]['_']);",
																			"var less = new Date(created + 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:created');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "jira:jiraId",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}={{created-query}}",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}={{created-query}}"
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]['_']);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B{{created-query1}},{{created-query2}}%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B{{created-query1}},{{created-query2}}%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'jira:jiraId');",
															"pm.variables.set('prefixes', 'jira=<http://fit.vutbr.cz/group/verifit/oslc/ns/jira%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "jira:project",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'jira:project');",
															"pm.variables.set('prefixes', 'jira=<http://fit.vutbr.cz/group/verifit/oslc/ns/jira%23>, dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:identifier",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix=oslc=<http://open-services.net/ns/core%23>&oslc.where={{query-target}}=\"{{created-query}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "oslc=<http://open-services.net/ns/core%23>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query', requirement[query_target]);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix=oslc=<http://open-services.net/ns/core%23>&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "oslc=<http://open-services.net/ns/core%23>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:identifier');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "oslc_rm:decomposedBy",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target][0]['$']['rdf:resource']);",
																			"pm.variables.set('created-query2', requirement[query_target][1]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t\t<oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query1}}>",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query1}}>"
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query2}}>",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query2}}>"
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target][0]['$']['rdf:resource']);",
																			"pm.variables.set('created-query2', requirement[query_target][1]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t\t<oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=<{{created-query1}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=<{{created-query1}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=<{{created-query2}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=<{{created-query2}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t\t<oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'oslc_rm:decomposedBy');",
															"pm.variables.set('prefixes', 'oslc_rm=<http://open-services.net/ns/rm%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "oslc_rm:decomposes",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target][0]['$']['rdf:resource']);",
																			"pm.variables.set('created-query2', requirement[query_target][1]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t\t<oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query1}}>",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query1}}>"
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query2}}>",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query2}}>"
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target][0]['$']['rdf:resource']);",
																			"pm.variables.set('created-query2', requirement[query_target][1]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t\t<oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=<{{created-query1}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=<{{created-query1}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=<{{created-query2}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=<{{created-query2}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection 1 without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query1', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement with Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																			"pm.variables.set('created-query2', requirement[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t\t<oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirement"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'oslc_rm:decomposes');",
															"pm.variables.set('prefixes', 'oslc_rm=<http://open-services.net/ns/rm%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "combined",
									"item": [
										{
											"name": "single",
											"item": [
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string1', uuid.v4());",
																	"pm.variables.set('random-string2', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string1}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string2}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.searchTerms={{random-string1}}&oslc.where=dcterms:subject=\"{{random-string2}}\"&oslc.prefix=dcterms=<http://purl.org/dc/terms/>",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirement"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string1}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:subject=\"{{random-string2}}\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where"
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple",
											"item": [
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier1', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string1', uuid.v4());",
																	"pm.variables.set('random-string2', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string1}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string2}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Requirement without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
																	"pm.variables.set('created-identifier2', requirement['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string1}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string2}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirement"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['oslc_rm:Requirement']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirement?oslc.searchTerms={{random-string1}}&oslc.where=dcterms:subject=\"{{random-string2}}\"&oslc.prefix=dcterms=<http://purl.org/dc/terms/>",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirement"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string1}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:subject=\"{{random-string2}}\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where"
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "requirement collection",
					"item": [
						{
							"name": "get-non-existing-requirement-collection",
							"item": [
								{
									"name": "Get Non-existing Requirement Collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/non-existing-guid",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"non-existing-guid"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "create-requirement-collection-without-id",
							"item": [
								{
									"name": "Create Requirement Collection without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "create-requirement-collection-with-id",
							"item": [
								{
									"name": "Create Requirement Collection with Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement Collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Requirement Collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Requirement Collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/non-existing-guid",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"non-existing-guid"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-requirement-collection",
							"item": [
								{
									"name": "Create Requirement Collection with Identifier Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement Collection Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Requirement Collection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var requirement_collection = requestJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('request-requirement-collection', requirement_collection);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Updated Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description 2</dcterms:description>\n\t\t<dcterms:subject>test_label4</dcterms:subject>\n\t\t<dcterms:subject>test_label3</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Requirement Collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_requirement_collection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"var request_requirement_collection = pm.variables.get('request-requirement-collection');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_requirement_collection['dcterms:title']).to.eql(request_requirement_collection['dcterms:title']);",
													"    pm.expect(updated_requirement_collection['dcterms:description']).to.eql(request_requirement_collection['dcterms:description']);",
													"    pm.expect(updated_requirement_collection['dcterms:subject']).to.eql(request_requirement_collection['dcterms:subject']);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Requirement Collection Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Requirement Collection Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/non-existing-guid",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"non-existing-guid"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-requirement-collection-with-links",
							"item": [
								{
									"name": "Create Requirement 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-2', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-2', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection with Identifier Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n\t\t<oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Requirement Collection Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Requirement Collection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var requirement_collection = requestJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('request-requirement-collection', requirement_collection);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Updated Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description 2</dcterms:description>\n\t\t<dcterms:subject>test_label4</dcterms:subject>\n\t\t<dcterms:subject>test_label3</dcterms:subject>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-2}}\"/>\n\t\t<oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-2}}\"/>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Requirement Collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_requirement_collection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"var request_requirement_collection = pm.variables.get('request-requirement-collection');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_requirement_collection['dcterms:title']).to.eql(request_requirement_collection['dcterms:title']);",
													"    pm.expect(updated_requirement_collection['dcterms:description']).to.eql(request_requirement_collection['dcterms:description']);",
													"    var subjects = request_requirement_collection['dcterms:subject'];",
													"    pm.expect(updated_requirement_collection['dcterms:subject']).to.contain(subjects[0]);",
													"    pm.expect(updated_requirement_collection['dcterms:subject']).to.contain(subjects[1]);",
													"    pm.expect(updated_requirement_collection['oslc_rm:decomposes']['$']['rdf:resource']).to.eql(evalVariableValuesInString(request_requirement_collection['oslc_rm:decomposes']['$']['rdf:resource']));",
													"    pm.expect(updated_requirement_collection['oslc_rm:decomposedBy']['$']['rdf:resource']).to.eql(evalVariableValuesInString(request_requirement_collection['oslc_rm:decomposedBy']['$']['rdf:resource']));",
													"});",
													"",
													"function evalVariableValuesInString(text) {",
													"    var variable_id = text.match(/{{(.*?)}}/)[1];",
													"    var variable_value = pm.variables.get(variable_id);",
													"    return text.replace(\"{{\" + variable_id + \"}}\", variable_value);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Requirement Collection Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/{{created-identifier}}",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Requirement Collection Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{jira_adaptor}}/services/requirementCollection/RequirementCollection/non-existing-guid",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"requirementCollection",
												"RequirementCollection",
												"non-existing-guid"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "requirement-with-invalid-links-not-created Copy",
							"item": [
								{
									"name": "Create Requirement Collection with Invalid Requirement Decomposed By",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{$guid}}\"/>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>\n",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection with Invalid Requirement Decomposes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{$guid}}\"/>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>\n",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection with Invalid Requirement Collection Decomposed By",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n        <oslc_rm:decomposedBy rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{$guid}}\"/>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>\n",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection with Invalid Requirement Collection Decomposes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 400 (bad request)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n        <dcterms:identifier>bed99ce7-a96a-44ae-95ee-1d3751ee5b39</dcterms:identifier>\n        <oslc_rm:decomposes rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{$guid}}\"/>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>\n",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "query-requirement-collection",
							"item": [
								{
									"name": "fulltext",
									"item": [
										{
											"name": "single-title",
											"item": [
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement Collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_requirement_collection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_requirement_collection['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirementCollection"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple-title",
											"item": [
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement Collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirementCollection"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "single-description",
											"item": [
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test {{random-string}} description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement Collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirementCollection"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple-description",
											"item": [
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test {{random-string}} description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test {{random-string}} description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement Collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.searchTerms={{random-string}}",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirementCollection"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "where",
									"item": [
										{
											"name": "oslc:shortTitle",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=\"{{created-query}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query1', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query2', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'oslc:shortTitle');",
															"pm.variables.set('prefixes', 'oslc=<http://open-services.net/ns/core%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:subject",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=\"{{created-query}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query1', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query2', pm.variables.get('random-string'));",
																			"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:subject');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:modified",
											"item": [
												{
													"name": "greater",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"var created = Date.parse(requirementCollection[query_target]['_']);",
																			"var less = new Date(created - 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "less",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"var created = Date.parse(requirementCollection[query_target]['_']);",
																			"var less = new Date(created + 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:modified');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:creator",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query1', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query2', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:creator');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:created",
											"item": [
												{
													"name": "greater",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"var created = Date.parse(requirementCollection[query_target]['_']);",
																			"var less = new Date(created - 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}>\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "less",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"var created = Date.parse(requirementCollection[query_target]['_']);",
																			"var less = new Date(created + 120000);",
																			"pm.variables.set('created-query', less.toISOString());",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}<\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:created');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "jira:jiraId",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}={{created-query}}",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}={{created-query}}"
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query1', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query2', requirementCollection[query_target]['_']);",
																			"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B{{created-query1}},{{created-query2}}%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B{{created-query1}},{{created-query2}}%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'jira:jiraId');",
															"pm.variables.set('prefixes', 'jira=<http://fit.vutbr.cz/group/verifit/oslc/ns/jira%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "jira:project",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-query}}> and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}, dcterms=<http://purl.org/dc/terms/>&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}, dcterms=<http://purl.org/dc/terms/>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query1', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query2', requirementCollection[query_target]['$']['rdf:resource']);",
																			"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-query1}}>,<{{created-query2}}>%5D and dcterms:identifier in %5B\"{{created-identifier1}},{{created-identifier2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'jira:project');",
															"pm.variables.set('prefixes', 'jira=<http://fit.vutbr.cz/group/verifit/oslc/ns/jira%23>, dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "dcterms:identifier",
											"item": [
												{
													"name": "equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix=oslc=<http://open-services.net/ns/core%23>&oslc.where={{query-target}}=\"{{created-query}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "oslc=<http://open-services.net/ns/core%23>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equals",
													"item": [
														{
															"name": "Create Requirement Collection without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query', requirementCollection[query_target]);",
																			"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created RequirementCollection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			"",
																			"/*",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_requirement = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:Requirement'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_requirement['dcterms:identifier']).to.eql(expected_guid);",
																			"});",
																			"*/"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix={{prefixes}}&oslc.where={{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\"",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\" and dcterms:identifier=\"{{created-identifier}}\""
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query1', requirementCollection[query_target]);",
																			"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																			"pm.variables.set('created-query2', requirementCollection[query_target]);",
																			"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirementCollection"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Requirement Collection",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.prefix=oslc=<http://open-services.net/ns/core%23>&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"queryRequirementCollection"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "oslc=<http://open-services.net/ns/core%23>"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D"
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:identifier');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "combined",
									"item": [
										{
											"name": "single",
											"item": [
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string1', uuid.v4());",
																	"pm.variables.set('random-string2', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string1}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string2}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement Collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_requirementCollection = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['oslc_rm:RequirementCollection'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_requirementCollection['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.searchTerms={{random-string1}}&oslc.where=dcterms:subject=\"{{random-string2}}\"&oslc.prefix=dcterms=<http://purl.org/dc/terms/>",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirementCollection"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string1}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:subject=\"{{random-string2}}\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where"
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple",
											"item": [
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier1', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string1', uuid.v4());",
																	"pm.variables.set('random-string2', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string1}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string2}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Requirement Collection without Identifier",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
																	"pm.variables.set('created-identifier2', requirementCollection['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API {{random-string1}} requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>{{random-string2}}</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"createRequirementCollection"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Requirement Collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['oslc_rm:RequirementCollection']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{jira_adaptor}}/services/service1/resources/queryRequirementCollection?oslc.searchTerms={{random-string1}}&oslc.where=dcterms:subject=\"{{random-string2}}\"&oslc.prefix=dcterms=<http://purl.org/dc/terms/>",
															"host": [
																"{{jira_adaptor}}"
															],
															"path": [
																"services",
																"service1",
																"resources",
																"queryRequirementCollection"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string1}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:subject=\"{{random-string2}}\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where"
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "person",
					"item": [
						{
							"name": "Get Person by Identifier",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code should be 200 (ok)\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/rdf+xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{jira_adaptor}}/services/person/Person/test_user",
									"host": [
										"{{jira_adaptor}}"
									],
									"path": [
										"services",
										"person",
										"Person",
										"test_user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Person by Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code should be 200 (ok)\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/rdf+xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{jira_adaptor}}/services/person/Person/test@test.com",
									"host": [
										"{{jira_adaptor}}"
									],
									"path": [
										"services",
										"person",
										"Person",
										"test@test.com"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Non-existing Person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code should be 404 (not-found)\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/rdf+xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{jira_adaptor}}/services/person/Person/non-existing-person-id",
									"host": [
										"{{jira_adaptor}}"
									],
									"path": [
										"services",
										"person",
										"Person",
										"non-existing-person-id"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "project",
					"item": [
						{
							"name": "Get Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code should be 200 (ok)\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/rdf+xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{jira_adaptor}}/services/project/Project/10000",
									"host": [
										"{{jira_adaptor}}"
									],
									"path": [
										"services",
										"project",
										"Project",
										"10000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Non-existing Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code should be 404 (not-found)\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/rdf+xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{jira_adaptor}}/services/project/Project/99999",
									"host": [
										"{{jira_adaptor}}"
									],
									"path": [
										"services",
										"project",
										"Project",
										"99999"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "r4j",
			"item": [
				{
					"name": "folder",
					"item": [
						{
							"name": "get-non-existing-folder",
							"item": [
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/TP-99999",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"TP-99999"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "create-folder-in-root",
							"item": [
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "create-folder-with-subfolder",
							"item": [
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var subfolder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-subidentifier', subfolder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique subfolder</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-subidentifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-subidentifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder With Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-subidentifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-subidentifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-folder-in-root",
							"item": [
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Folder",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var folder = requestJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('request-folder', folder);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test updated title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Update test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"var request_folder = pm.variables.get('request-folder');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_folder['dcterms:title']).to.eql(request_folder['dcterms:title']);",
													"    pm.expect(updated_folder['dcterms:description']).to.eql(request_folder['dcterms:description']);",
													"    pm.expect(updated_folder['jira_r4j:parent']['$']['rdf:resource']).to.eql(request_folder['jira_r4j:parent']['$']['rdf:resource']);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-folder-in-root-without-updating-title",
							"item": [
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Folder",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var folder = requestJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('request-folder', folder);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Update test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"var request_folder = pm.variables.get('request-folder');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_folder['dcterms:title']).to.eql(request_folder['dcterms:title']);",
													"    pm.expect(updated_folder['dcterms:description']).to.eql(request_folder['dcterms:description']);",
													"    pm.expect(updated_folder['jira_r4j:parent']['$']['rdf:resource']).to.eql(request_folder['jira_r4j:parent']['$']['rdf:resource']);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-folder-with-subfolder",
							"item": [
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Folder 2 In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-second-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test second title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-second-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-second-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var subfolder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-subidentifier', subfolder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique subfolder</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-subidentifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-subidentifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder With Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Folder",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var folder = requestJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('request-folder', folder);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test updated title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Update test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-second-identifier}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"var request_folder = pm.variables.get('request-folder');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_folder['dcterms:title']).to.eql(request_folder['dcterms:title']);",
													"    pm.expect(updated_folder['dcterms:description']).to.eql(request_folder['dcterms:description']);",
													"    pm.expect(updated_folder['jira_r4j:parent']['$']['rdf:resource']).to.eql(evalVariableValuesInString(request_folder['jira_r4j:parent']['$']['rdf:resource']));",
													"});",
													"",
													"function evalVariableValuesInString(text) {",
													"    var variable_id = text.match(/{{(.*?)}}/)[1];",
													"    var variable_value = pm.variables.get(variable_id);",
													"    return text.replace(\"{{\" + variable_id + \"}}\", variable_value);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-subidentifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-subidentifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-second-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-second-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-second-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-second-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-folder-in-root-with-contains",
							"item": [
								{
									"name": "Create Requirement 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-2', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-2', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Folder",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var folder = requestJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('request-folder', folder);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test updated title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Update test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-2}}\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-2}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"var request_folder = pm.variables.get('request-folder');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_folder['dcterms:title']).to.eql(request_folder['dcterms:title']);",
													"    pm.expect(updated_folder['dcterms:description']).to.eql(request_folder['dcterms:description']);",
													"    pm.expect(updated_folder['jira_r4j:parent']['$']['rdf:resource']).to.eql(request_folder['jira_r4j:parent']['$']['rdf:resource']);",
													"    pm.expect(ValidateContains(request_folder['jira_r4j:contains'], updated_folder['jira_r4j:contains'])).to.eql(true);",
													"});",
													"",
													"function evalVariableValuesInString(text) {",
													"    var variable_id = text.match(/{{(.*?)}}/)[1];",
													"    var variable_value = pm.variables.get(variable_id);",
													"    return text.replace(\"{{\" + variable_id + \"}}\", variable_value);",
													"}",
													"",
													"function ValidateContains(original, updated) {",
													"    var originalArray = [];",
													"    var updatedArray = [];",
													"",
													"    original.forEach(function(res) { originalArray.push(evalVariableValuesInString(res['$']['rdf:resource'])) });",
													"    updated.forEach(function(res) { updatedArray.push(res['$']['rdf:resource']) });",
													"   ",
													"    var difference1 = originalArray.filter(x => !updatedArray.includes(x));",
													"    var difference2 = updatedArray.filter(x => !originalArray.includes(x));",
													"",
													"    return difference1.length == 0 && difference2.length == 0;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update-folder-with-subfolder-with-contains",
							"item": [
								{
									"name": "Create Requirement 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-1', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirement = responseJson['rdf:RDF']['oslc_rm:Requirement'];",
													"pm.variables.set('requirement-identifier-2', requirement['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 1 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-1', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Requirement Collection 2 without Identifier",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var requirementCollection = responseJson['rdf:RDF']['oslc_rm:RequirementCollection'];",
													"pm.variables.set('requirement-collection-identifier-2', requirementCollection['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:RequirementCollection>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement collection</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:RequirementCollection>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{jira_adaptor}}/services/service1/resources/createRequirementCollection",
											"host": [
												"{{jira_adaptor}}"
											],
											"path": [
												"services",
												"service1",
												"resources",
												"createRequirementCollection"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Folder In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-1}}\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-1}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Folder 2 In Root",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-second-identifier', folder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test second title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-second-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-second-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 201 (created)\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var subfolder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('created-subidentifier', subfolder['dcterms:identifier']);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test title unique subfolder</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folders/createFolder",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folders",
												"createFolder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-subidentifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-subidentifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Created Folder With Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Folder",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var requestJson = xml2Json(pm.request.body);",
													"var folder = requestJson['rdf:RDF']['jira_r4j:Folder'];",
													"pm.variables.set('request-folder', folder);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">Test updated title unique</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Update test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-second-identifier}}\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirement/Requirement/{{requirement-identifier-2}}\"/>\n        <jira_r4j:contains rdf:resource=\"http://localhost:8081/jira/services/requirementCollection/RequirementCollection/{{requirement-collection-identifier-2}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Updated Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseJson = xml2Json(responseBody);",
													"var updated_folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
													"var request_folder = pm.variables.get('request-folder');",
													"",
													"pm.test(\"Values should have been updated\", function () {",
													"    pm.expect(updated_folder['dcterms:title']).to.eql(request_folder['dcterms:title']);",
													"    pm.expect(updated_folder['dcterms:description']).to.eql(request_folder['dcterms:description']);",
													"    pm.expect(updated_folder['jira_r4j:parent']['$']['rdf:resource']).to.eql(evalVariableValuesInString(request_folder['jira_r4j:parent']['$']['rdf:resource']));",
													"    pm.expect(ValidateContains(request_folder['jira_r4j:contains'], updated_folder['jira_r4j:contains'])).to.eql(true);",
													"});",
													"",
													"function evalVariableValuesInString(text) {",
													"    var variable_id = text.match(/{{(.*?)}}/)[1];",
													"    var variable_value = pm.variables.get(variable_id);",
													"    return text.replace(\"{{\" + variable_id + \"}}\", variable_value);",
													"}",
													"",
													"function ValidateContains(original, updated) {",
													"    var originalArray = [];",
													"    var updatedArray = [];",
													"",
													"    original.forEach(function(res) { originalArray.push(evalVariableValuesInString(res['$']['rdf:resource'])) });",
													"    updated.forEach(function(res) { updatedArray.push(res['$']['rdf:resource']) });",
													"   ",
													"    var difference1 = originalArray.filter(x => !updatedArray.includes(x));",
													"    var difference2 = updatedArray.filter(x => !originalArray.includes(x));",
													"",
													"    return difference1.length == 0 && difference2.length == 0;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Subfolder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-subidentifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-subidentifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Folder 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 200 (ok)\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-second-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-second-identifier}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Non-existing Folder 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code should be 404 (not-found)\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/rdf+xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{r4j_adaptor}}/services/folder/Folder/{{created-second-identifier}}",
											"host": [
												"{{r4j_adaptor}}"
											],
											"path": [
												"services",
												"folder",
												"Folder",
												"{{created-second-identifier}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "query-folder",
							"item": [
								{
									"name": "fulltext",
									"item": [
										{
											"name": "single-title",
											"item": [
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Folder",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_entity = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['jira_r4j:Folder'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_entity['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"queryFolder"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple-title",
											"item": [
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier1', folder['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier2', folder['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">test {{random-string}} test</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Folder",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"queryFolder"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "single-description",
											"item": [
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier', folder['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());",
																	"pm.variables.set('random-string1', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string1}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">{{random-string}}</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Folder",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_entity = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['jira_r4j:Folder'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_entity['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"queryFolder"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "multiple-description",
											"item": [
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier1', folder['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());",
																	"pm.variables.set('random-string1', uuid.v4());",
																	"pm.variables.set('random-string2', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string1}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">{{random-string}}</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier2', folder['dcterms:identifier']);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string2}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">test {{random-string}} test</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Folder",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"queryFolder"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "dcterms:identifier=\"0\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix.",
																	"disabled": true
																},
																{
																	"key": "oslc.prefix",
																	"value": "dcterms=<http://purl.org/dc/terms/>",
																	"description": "Define prefixes used in oslc.where",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "where",
									"item": [
										{
											"name": "dcterms:identifier",
											"item": [
												{
													"name": "equal",
													"item": [
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_entity = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['jira_r4j:Folder'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_entity['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.where={{query-target}}=\"{{created-query}}\"&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\"",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equal",
													"item": [
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}&oslc.where={{query-target}}!=\"{{created-query}}\"&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\"",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier1', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query1', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier2', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query2', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">test {{random-string}} test</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:identifier');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "jira_r4j:parent",
											"item": [
												{
													"name": "equal",
													"item": [
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier-parent', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query', folder[query_target]['$']['rdf:resource']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier-parent}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_entity = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['jira_r4j:Folder'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_entity['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.where={{query-target}}=\"{{created-query}}\"&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=\"{{created-query}}\"",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equal",
													"item": [
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier-parent', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string1', uuid.v4());",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string1}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query', folder[query_target]['$']['rdf:resource']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier-parent}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}&oslc.where={{query-target}}!=\"{{created-query}}\"&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=\"{{created-query}}\"",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier-parent1', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string1', uuid.v4());",
																			"pm.variables.set('random-string2', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string1}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier1', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query1', folder[query_target]['$']['rdf:resource']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string1}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier-parent1}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier-parent2', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string2}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier2', folder['dcterms:identifier']);",
																			"pm.variables.set('created-query2', folder[query_target]['$']['rdf:resource']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string2}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/{{created-identifier-parent2}}\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'jira_r4j:parent');",
															"pm.variables.set('prefixes', 'jira_r4j=<http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "jira_r4j:contains",
											"item": [
												{
													"name": "equal",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementUri = responseJson['rdf:RDF']['oslc_rm:Requirement']['$']['rdf:about'];",
																			"pm.variables.set('created-requirement', requirementUri);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:contains rdf:resource=\"{{created-requirement}}\"/>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var expected_guid = pm.variables.get('created-identifier');",
																			"var response_entity = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['jira_r4j:Folder'];",
																			"",
																			"pm.test(\"Returned should have the same identifier as created\", function () {",
																			"    pm.expect(response_entity['dcterms:identifier']).to.eql(expected_guid);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.where={{query-target}}=<{{created-requirement}}>&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}=<{{created-requirement}}>",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "not-equal",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementUri = responseJson['rdf:RDF']['oslc_rm:Requirement']['$']['rdf:about'];",
																			"pm.variables.set('created-requirement', requirementUri);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:contains rdf:resource=\"{{created-requirement}}\"/>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"",
																			"pm.test(\"Shouldn't return anything\", function () {",
																			"    var count = responseJson['rdf:RDF']['oslc:ResponseInfo']['oslc:totalCount']['_'];",
																			"    pm.expect(count).to.eql(\"0\");",
																			"});",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}&oslc.where={{query-target}}!=<{{created-requirement}}>&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties"
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}}!=<{{created-requirement}}>",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "in",
													"item": [
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementUri = responseJson['rdf:RDF']['oslc_rm:Requirement']['$']['rdf:about'];",
																			"pm.variables.set('created-requirement1', requirementUri);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier1', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string1', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string1}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:contains rdf:resource=\"{{created-requirement1}}\"/>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Requirement without Identifier",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var requirementUri = responseJson['rdf:RDF']['oslc_rm:Requirement']['$']['rdf:about'];",
																			"pm.variables.set('created-requirement2', requirementUri);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\txmlns:dcterms=\"http://purl.org/dc/terms/\"\n\txmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n\txmlns:oslc=\"http://open-services.net/ns/core#\"\n\txmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n\txmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n\txmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n\txmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n\t<oslc_rm:Requirement>\n\t\t<dcterms:title rdf:parseType=\"Literal\">Test API requirement</dcterms:title>\n\t\t<dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n\t\t<jira:project rdf:resource={{projectUri}}/>\n\t\t<dcterms:subject>test_label1</dcterms:subject>\n\t\t<dcterms:subject>test_label2</dcterms:subject>\n\t</oslc_rm:Requirement>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{jira_adaptor}}/services/service1/resources/createRequirement",
																	"host": [
																		"{{jira_adaptor}}"
																	],
																	"path": [
																		"services",
																		"service1",
																		"resources",
																		"createRequirement"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Folder In Root",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 201 (created)\", function () {",
																			"    pm.response.to.have.status(201);",
																			"});",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var query_target = pm.variables.get('query-target');",
																			"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																			"pm.variables.set('created-identifier2', folder['dcterms:identifier']);",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"var uuid = require('uuid'); ",
																			"pm.variables.set('random-string2', uuid.v4());"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string2}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:contains rdf:resource=\"{{created-requirement2}}\"/>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
																	"options": {
																		"raw": {
																			"language": "xml"
																		}
																	}
																},
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/createFolder",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"createFolder"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Query For Created Folder",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Response code should be 200 (ok)\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"var expected_guid1 = pm.variables.get('created-identifier1');",
																			"var expected_guid2 = pm.variables.get('created-identifier2');",
																			"var expected_guids = [expected_guid1, expected_guid2];",
																			"",
																			"var responseJson = xml2Json(responseBody);",
																			"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																			"",
																			"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[0];",
																			"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});",
																			"",
																			"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																			"    var returned1 = response_members[1];",
																			"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																			"    pm.expect(expected_guids).contains(identifier);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/rdf+xml",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.where={{query-target}} in %5B<{{created-requirement1}}>,<{{created-requirement2}}>%5D&oslc.prefix={{prefixes}}",
																	"host": [
																		"{{r4j_adaptor}}"
																	],
																	"path": [
																		"services",
																		"folders",
																		"queryFolder"
																	],
																	"query": [
																		{
																			"key": "oslc.searchTerms",
																			"value": "{{random-string}}",
																			"description": "Full text search in all properties",
																			"disabled": true
																		},
																		{
																			"key": "oslc.where",
																			"value": "{{query-target}} in %5B<{{created-requirement1}}>,<{{created-requirement2}}>%5D",
																			"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																		},
																		{
																			"key": "oslc.prefix",
																			"value": "{{prefixes}}",
																			"description": "Define prefixes used in oslc.where"
																		},
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Number of resources per response",
																			"disabled": true
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "Number of resources to skip (cycle through pages)",
																			"disabled": true
																		},
																		{
																			"key": "oslc.select",
																			"value": "dcterms:identifier",
																			"description": "Include the specified immediate and nested properties of the member resources.",
																			"disabled": true
																		},
																		{
																			"key": "oslc.properties",
																			"value": "dcterms:identifier",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'jira_r4j:contains');",
															"pm.variables.set('prefixes', 'jira_r4j=<http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j%23>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "combined",
									"item": [
										{
											"name": "single",
											"item": [
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier', folder['dcterms:identifier']);",
																	"pm.variables.set('created-query', folder['dcterms:identifier']);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Folder",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var expected_guid = pm.variables.get('created-identifier');",
																	"var response_entity = responseJson['rdf:RDF']['rdf:Description']['rdfs:member']['jira_r4j:Folder'];",
																	"",
																	"pm.test(\"Returned should have the same identifier as created\", function () {",
																	"    pm.expect(response_entity['dcterms:identifier']).to.eql(expected_guid);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}&oslc.where={{query-target}}=\"{{created-query}}\"&oslc.prefix={{prefixes}}",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"queryFolder"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "{{query-target}}=\"{{created-query}}\"",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																},
																{
																	"key": "oslc.prefix",
																	"value": "{{prefixes}}",
																	"description": "Define prefixes used in oslc.where"
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:identifier');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "multiple",
											"item": [
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier1', folder['dcterms:identifier']);",
																	"pm.variables.set('created-query1', folder['dcterms:identifier']);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid'); ",
																	"pm.variables.set('random-string', uuid.v4());"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">{{random-string}}</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Folder In Root",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 201 (created)\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var folder = responseJson['rdf:RDF']['jira_r4j:Folder'];",
																	"pm.variables.set('created-identifier2', folder['dcterms:identifier']);",
																	"pm.variables.set('created-query2', folder['dcterms:identifier']);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\"\n    xmlns:jira_r4j=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira_r4j#\"\n    xmlns:oslc_data=\"http://open-services.net/ns/servicemanagement/1.0/\"\n    xmlns:oslc=\"http://open-services.net/ns/core#\"\n    xmlns:oslc_rm=\"http://open-services.net/ns/rm#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:jira=\"http://fit.vutbr.cz/group/verifit/oslc/ns/jira#\"\n    xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <jira_r4j:Folder rdf:about=\"http://localhost:8082/r4j/services/folder/Folder/TP-5\">\n        <dcterms:title rdf:parseType=\"Literal\">test {{random-string}} test</dcterms:title>\n        <dcterms:description rdf:parseType=\"Literal\">Test description</dcterms:description>\n        <jira_r4j:parent rdf:resource=\"http://localhost:8082/r4j/services/folder/Folder/TP-ROOT\"/>\n    </jira_r4j:Folder>\n</rdf:RDF>",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/createFolder",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"createFolder"
															]
														}
													},
													"response": []
												},
												{
													"name": "Query For Created Folder",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Response code should be 200 (ok)\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expected_guid1 = pm.variables.get('created-identifier1');",
																	"var expected_guid2 = pm.variables.get('created-identifier2');",
																	"var expected_guids = [expected_guid1, expected_guid2];",
																	"",
																	"var responseJson = xml2Json(responseBody);",
																	"var response_members = responseJson['rdf:RDF']['rdf:Description']['rdfs:member'];",
																	"",
																	"pm.test(\"Returned 1 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[0];",
																	"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});",
																	"",
																	"pm.test(\"Returned 2 should have the same identifier as created\", function () {",
																	"    var returned1 = response_members[1];",
																	"    var identifier = returned1['jira_r4j:Folder']['dcterms:identifier'];",
																	"    pm.expect(expected_guids).contains(identifier);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/rdf+xml",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{r4j_adaptor}}/services/folders/queryFolder?oslc.searchTerms={{random-string}}&oslc.where={{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D&oslc.prefix={{prefixes}}",
															"host": [
																"{{r4j_adaptor}}"
															],
															"path": [
																"services",
																"folders",
																"queryFolder"
															],
															"query": [
																{
																	"key": "oslc.searchTerms",
																	"value": "{{random-string}}",
																	"description": "Full text search in all properties"
																},
																{
																	"key": "oslc.where",
																	"value": "{{query-target}} in %5B\"{{created-query1}}\",\"{{created-query2}}\"%5D",
																	"description": "Equality of a certain property (supports INT, String, and URL). Needs to be used with oslc.prefix."
																},
																{
																	"key": "oslc.prefix",
																	"value": "{{prefixes}}",
																	"description": "Define prefixes used in oslc.where"
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of resources per response",
																	"disabled": true
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of resources to skip (cycle through pages)",
																	"disabled": true
																},
																{
																	"key": "oslc.select",
																	"value": "dcterms:identifier",
																	"description": "Include the specified immediate and nested properties of the member resources.",
																	"disabled": true
																},
																{
																	"key": "oslc.properties",
																	"value": "dcterms:identifier",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.variables.set('query-target', 'dcterms:identifier');",
															"pm.variables.set('prefixes', 'dcterms=<http://purl.org/dc/terms/>');"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{BASIC_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{BASIC_username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASIC_username",
			"value": "test_user",
			"type": "string"
		},
		{
			"key": "BASIC_password",
			"value": "testpassword",
			"type": "string"
		},
		{
			"key": "projectUri",
			"value": "\"{{jira_adaptor}}/jira/services/project/Project/10000\"",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6ImE5N2IwZjU1YjlmNmIxMjY2MjQwZGUzNGUwZmE3ODYwIn0._sJfi4N23LmpQ-iNpkKggCQ_yS59FxYhFgdpjhHOWuE",
			"type": "string"
		}
	]
}