// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package cz.vutbr.fit.danielpindur.oslc.r4j.resources;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;

import cz.vutbr.fit.danielpindur.oslc.r4j.resources.Oslc_rmDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.DctermsDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.FoafDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.JiraDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.OslcDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.Oslc_rmDomainConstants;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IPerson;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IProject;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IRequirement;
import cz.vutbr.fit.danielpindur.oslc.r4j.resources.IRequirementCollection;
// Start of user code imports
// End of user code

@OslcNamespace(Oslc_rmDomainConstants.REQUIREMENTCOLLECTION_NAMESPACE)
@OslcName(Oslc_rmDomainConstants.REQUIREMENTCOLLECTION_LOCALNAME)
@OslcResourceShape(title = "RequirementCollection Shape", describes = Oslc_rmDomainConstants.REQUIREMENTCOLLECTION_TYPE)
public interface IRequirementCollection
{

    public void addDecomposedBy(final Link decomposedBy );
    public void addDecomposes(final Link decomposes );
    public void addContributor(final Link contributor );
    public void addCreator(final Link creator );
    public void addSubject(final String subject );

    @OslcName("title")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "title")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.XMLLiteral)
    @OslcReadOnly(false)
    public String getTitle();

    @OslcName("description")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "description")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.XMLLiteral)
    @OslcReadOnly(false)
    public String getDescription();

    @OslcName("identifier")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "identifier")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.String)
    @OslcReadOnly(true)
    public String getIdentifier();

    @OslcName("decomposedBy")
    @OslcPropertyDefinition(Oslc_rmDomainConstants.OSLC_REQUIREMENTS_MANAGEMENT_NAMSPACE + "decomposedBy")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Oslc_rmDomainConstants.REQUIREMENTCOLLECTION_TYPE, Oslc_rmDomainConstants.REQUIREMENT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getDecomposedBy();

    @OslcName("decomposes")
    @OslcPropertyDefinition(Oslc_rmDomainConstants.OSLC_REQUIREMENTS_MANAGEMENT_NAMSPACE + "decomposes")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Oslc_rmDomainConstants.REQUIREMENTCOLLECTION_TYPE, Oslc_rmDomainConstants.REQUIREMENT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getDecomposes();

    @OslcName("project")
    @OslcPropertyDefinition(JiraDomainConstants.JIRA_NAMSPACE + "project")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({JiraDomainConstants.PROJECT_TYPE})
    @OslcReadOnly(false)
    public Link getProject();

    @OslcName("shortTitle")
    @OslcPropertyDefinition(OslcDomainConstants.OSLC_CORE_NAMSPACE + "shortTitle")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.XMLLiteral)
    @OslcReadOnly(true)
    public String getShortTitle();

    @OslcName("modified")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "modified")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.DateTime)
    @OslcReadOnly(false)
    public Date getModified();

    @OslcName("created")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "created")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.DateTime)
    @OslcReadOnly(false)
    public Date getCreated();

    @OslcName("contributor")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "contributor")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({FoafDomainConstants.PERSON_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getContributor();

    @OslcName("creator")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "creator")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({FoafDomainConstants.PERSON_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getCreator();

    @OslcName("subject")
    @OslcPropertyDefinition(DctermsDomainConstants.DUBLIN_CORE_NAMSPACE + "subject")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.String)
    @OslcReadOnly(false)
    public Set<String> getSubject();

    @OslcName("jiraId")
    @OslcPropertyDefinition(JiraDomainConstants.JIRA_NAMSPACE + "jiraId")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Integer)
    @OslcReadOnly(true)
    public Integer getJiraId();


    public void setTitle(final String title );
    public void setDescription(final String description );
    public void setIdentifier(final String identifier );
    public void setDecomposedBy(final Set<Link> decomposedBy );
    public void setDecomposes(final Set<Link> decomposes );
    public void setProject(final Link project );
    public void setShortTitle(final String shortTitle );
    public void setModified(final Date modified );
    public void setCreated(final Date created );
    public void setContributor(final Set<Link> contributor );
    public void setCreator(final Set<Link> creator );
    public void setSubject(final Set<String> subject );
    public void setJiraId(final Integer jiraId );
}

